\BOOKMARK [1][-]{section.1}{Introduction}{}% 1
\BOOKMARK [2][-]{subsection.1.1}{Motivation}{section.1}% 2
\BOOKMARK [2][-]{subsection.1.2}{Applications}{section.1}% 3
\BOOKMARK [3][-]{subsubsection.1.2.1}{Molecule Chains \(Proteins\)}{subsection.1.2}% 4
\BOOKMARK [3][-]{subsubsection.1.2.2}{Handwriting Recognition}{subsection.1.2}% 5
\BOOKMARK [3][-]{subsubsection.1.2.3}{Comparing Routes}{subsection.1.2}% 6
\BOOKMARK [3][-]{subsubsection.1.2.4}{Computer Vision}{subsection.1.2}% 7
\BOOKMARK [3][-]{subsubsection.1.2.5}{Wifi access point placing}{subsection.1.2}% 8
\BOOKMARK [2][-]{subsection.1.3}{Problem Metaphor \(Dog Walking\)}{section.1}% 9
\BOOKMARK [1][-]{section.2}{Preliminaries}{}% 10
\BOOKMARK [2][-]{subsection.2.1}{Polygonal Chains}{section.2}% 11
\BOOKMARK [2][-]{subsection.2.2}{Parametrisation}{section.2}% 12
\BOOKMARK [2][-]{subsection.2.3}{Height Function}{section.2}% 13
\BOOKMARK [1][-]{section.3}{Classical Fr\351chet Distance}{}% 14
\BOOKMARK [2][-]{subsection.3.1}{Traversal of P and Q}{section.3}% 15
\BOOKMARK [2][-]{subsection.3.2}{Free-Space Diagram}{section.3}% 16
\BOOKMARK [2][-]{subsection.3.3}{Decision Problem}{section.3}% 17
\BOOKMARK [2][-]{subsection.3.4}{Classical Critical Events}{section.3}% 18
\BOOKMARK [2][-]{subsection.3.5}{Computing the Classical Fr\351chet Distance}{section.3}% 19
\BOOKMARK [1][-]{section.4}{Lexicographic Fr\351chet Matchings}{}% 20
\BOOKMARK [2][-]{subsection.4.1}{Steepest Descent}{section.4}% 21
\BOOKMARK [2][-]{subsection.4.2}{New Lexicographic Type of Critical Event}{section.4}% 22
\BOOKMARK [2][-]{subsection.4.3}{Lexicographic Fr\351chet Matching Algorithm}{section.4}% 23
\BOOKMARK [1][-]{section.5}{Lexicographic Fr\351chet Distance with Degenerate Inputs}{}% 24
\BOOKMARK [2][-]{subsection.5.1}{Problem}{section.5}% 25
\BOOKMARK [2][-]{subsection.5.2}{Examples}{section.5}% 26
\BOOKMARK [3][-]{subsubsection.5.2.1}{Minimal Example: Traverse Both}{subsection.5.2}% 27
\BOOKMARK [3][-]{subsubsection.5.2.2}{Minimal Example: Traverse Either}{subsection.5.2}% 28
\BOOKMARK [3][-]{subsubsection.5.2.3}{Minimal Example: Traverse One}{subsection.5.2}% 29
\BOOKMARK [3][-]{subsubsection.5.2.4}{Complex Example}{subsection.5.2}% 30
\BOOKMARK [2][-]{subsection.5.3}{Possible Paths}{section.5}% 31
\BOOKMARK [3][-]{subsubsection.5.3.1}{Can Ck1 reach Ck2}{subsection.5.3}% 32
\BOOKMARK [2][-]{subsection.5.4}{Ascents and Descents}{section.5}% 33
\BOOKMARK [2][-]{subsection.5.5}{Postulate Algorithm}{section.5}% 34
\BOOKMARK [2][-]{subsection.5.6}{Traversing critical events}{section.5}% 35
\BOOKMARK [2][-]{subsection.5.7}{Example of Algorithm visualised \(visual example!\)}{section.5}% 36
\BOOKMARK [2][-]{subsection.5.8}{Analysing postulated algorithm for handling degenerate inputs}{section.5}% 37
\BOOKMARK [3][-]{subsubsection.5.8.1}{Runtime analysis}{subsection.5.8}% 38
\BOOKMARK [2][-]{subsection.5.9}{Real world application}{section.5}% 39
\BOOKMARK [1][-]{section.6}{Concluding Perspective}{}% 40
